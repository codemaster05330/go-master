// Code generated by MockGen. DO NOT EDIT.
// Source: image.go

// Package image is a generated GoMock package.
package image

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockimageRepository is a mock of imageRepository interface
type MockimageRepository struct {
	ctrl     *gomock.Controller
	recorder *MockimageRepositoryMockRecorder
}

// MockimageRepositoryMockRecorder is the mock recorder for MockimageRepository
type MockimageRepositoryMockRecorder struct {
	mock *MockimageRepository
}

// NewMockimageRepository creates a new mock instance
func NewMockimageRepository(ctrl *gomock.Controller) *MockimageRepository {
	mock := &MockimageRepository{ctrl: ctrl}
	mock.recorder = &MockimageRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockimageRepository) EXPECT() *MockimageRepositoryMockRecorder {
	return m.recorder
}

// SaveTempPath mocks base method
func (m *MockimageRepository) SaveTempPath(ctx context.Context, id, originalPath string, expiryTime time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveTempPath", ctx, id, originalPath, expiryTime)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveTempPath indicates an expected call of SaveTempPath
func (mr *MockimageRepositoryMockRecorder) SaveTempPath(ctx, id, originalPath, expiryTime interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTempPath", reflect.TypeOf((*MockimageRepository)(nil).SaveTempPath), ctx, id, originalPath, expiryTime)
}

// GetTempPath mocks base method
func (m *MockimageRepository) GetTempPath(ctx context.Context, id string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTempPath", ctx, id)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTempPath indicates an expected call of GetTempPath
func (mr *MockimageRepositoryMockRecorder) GetTempPath(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTempPath", reflect.TypeOf((*MockimageRepository)(nil).GetTempPath), ctx, id)
}
